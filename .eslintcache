[{"/Users/donny/Desktop/roladex/src/index.js":"1","/Users/donny/Desktop/roladex/src/App.js":"2","/Users/donny/Desktop/roladex/src/reportWebVitals.js":"3"},{"size":321,"mtime":1607757059642,"results":"4","hashOfConfig":"5"},{"size":3467,"mtime":1607757044931,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1607749249473,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"1irvm5a",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/donny/Desktop/roladex/src/index.js",["18"],"  \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n",["19","20"],"/Users/donny/Desktop/roladex/src/App.js",["21"],"import React, { useState, useEffect } from 'react';\nimport CardWrap from './components/CardWrap';\nimport Bar from './components/Bar'\nimport Header from \"./components/Header\";\nimport GroupCard from \"./components/GroupCard\"\nimport groupArray from \"./group.json\";\nimport Main from \"./components/Main\"\n\nfunction App() {\n\n  const [group, setGroup] = useState(groupArray);\n\n  const [search, setSearch] = useState('');\n\n  const [warning, setWarning] = useState(false);\n\n  const [nameSort, setNameSort] = useState(\"AZ\");\n\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    if(!search) {\n      return setGroup(groupArray);\n    }\n\n    const results = group.filter(person => \n      person.name.includes(search.toLowerCase())\n      );\n      setGroup(results);\n      setWarning(false);\n  }, [search])\n\n  const sortNames = () => {\n    switch (nameSort) {\n      case 'AZ':\n        setGroup([...group].sort((a, b) => (a.name > b.name) ? 1 : -1));\n        setNameSort(\"ZA\")\n        break;\n      case 'ZA':\n        setGroup([...group].sort((a, b) => (a.name < b.name) ? 1 : -1));\n        setNameSort(\"AZ\")\n        break;\n        default:\n          return;\n    }\n  }\n\n  const handleSelectDropdown = (eventKey) => {\n    switch (eventKey) {\n      case \"Striker\":\n        setGroup([...groupArray].filter(person =>\n          person.title.includes(\"Striker\")\n        ));\n        break;\n      case \"Midfielder\":\n        setGroup([...groupArray].filter(person =>\n          person.title.includes(\"Midfielder\")\n        ));\n        break;\n      case \"Defender\":\n        setGroup([...groupArray].filter(person =>\n          person.title.includes(\"Defender\")\n        ));\n        break;\n      case \"Goalie\":\n        setGroup([...groupArray].filter(person =>\n          person.title.includes(\"Goalie\")\n        ));\n        break;\n      case \"Seattle\":\n        setGroup([...groupArray].filter(person =>\n          person.location.includes(\"Seattle\")\n        ));\n        break;\n      case \"Columbus\":\n        setGroup([...groupArray].filter(person =>\n          person.location.includes(\"Columbus\")\n        ));\n        break;\n      case \"Portland\":\n      setGroup([...groupArray].filter(person =>\n        person.location.includes(\"Portland\")\n      ));\n      break;\n    default:\n      resetGroup();\n      return;       \n    }\n  }\n\n  const resetGroup = () => {\n    setGroup(groupArray);\n    setSearch(\"\");\n  }\n\n\n  return (\n    <>\n      <Header />\n      <Main>\n        <Bar\n          inputValue={search}\n          handleInputChange={handleInputChange}\n          resetBtn={resetGroup}\n          sortBtn={sortNames}\n          children={nameSort === \"AZ\" ? \"Sort A–Z\" : \"Sort Z–A\"}\n          handleSelectDropdown={handleSelectDropdown} />\n\n        {/* Validation */}\n        {warning === false ? null : <h4>Woops, please use letters only. Numbers or special characters won't display results.</h4>}\n        {group.length === 0 ? <h4>Looks like we don't have this team member. Please try a different name or hit \"Reset\".</h4> : null}\n        \n          <CardWrap>\n            {group.map(person => (\n              <GroupCard\n                key={person.id}\n                name={person.name}\n                title={person.title}\n                location={person.location}\n                phone={person.phone}\n                email={person.email}\n              />\n            ))}\n          </CardWrap>\n        \n      </Main>\n    </>\n  );\n}\n\nexport default App;","/Users/donny/Desktop/roladex/src/reportWebVitals.js",[],["22","23"],{"ruleId":"24","severity":1,"message":"25","line":7,"column":8,"nodeType":"26","messageId":"27","endLine":7,"endColumn":23},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":33,"column":6,"nodeType":"34","endLine":33,"endColumn":14,"suggestions":"35"},{"ruleId":"28","replacedBy":"36"},{"ruleId":"30","replacedBy":"37"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["38"],"no-negated-in-lhs",["39"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'group'. Either include it or remove the dependency array.","ArrayExpression",["40"],["38"],["39"],"no-global-assign","no-unsafe-negation",{"desc":"41","fix":"42"},"Update the dependencies array to be: [group, search]",{"range":"43","text":"44"},[831,839],"[group, search]"]